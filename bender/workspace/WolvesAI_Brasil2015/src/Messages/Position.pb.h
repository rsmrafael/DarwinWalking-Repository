// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Position.proto

#ifndef PROTOBUF_Position_2eproto__INCLUDED
#define PROTOBUF_Position_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Position_2eproto();
void protobuf_AssignDesc_Position_2eproto();
void protobuf_ShutdownFile_Position_2eproto();

class Position;

// ===================================================================

class Position : public ::google::protobuf::MessageLite {
 public:
  Position();
  virtual ~Position();
  
  Position(const Position& from);
  
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const Position& default_instance();
  
  void Swap(Position* other);
  
  // implements Message ----------------------------------------------
  
  Position* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline double angle() const;
  inline void set_angle(double value);
  
  // required double length = 2;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 2;
  inline double length() const;
  inline void set_length(double value);
  
  // required double accuracy = 3;
  inline bool has_accuracy() const;
  inline void clear_accuracy();
  static const int kAccuracyFieldNumber = 3;
  inline double accuracy() const;
  inline void set_accuracy(double value);
  
  // @@protoc_insertion_point(class_scope:protobuf.Position)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_accuracy();
  inline void clear_has_accuracy();
  
  double angle_;
  double length_;
  double accuracy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Position_2eproto();
  friend void protobuf_AssignDesc_Position_2eproto();
  friend void protobuf_ShutdownFile_Position_2eproto();
  
  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// ===================================================================


// ===================================================================

// Position

// required double angle = 1;
inline bool Position::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline double Position::angle() const {
  return angle_;
}
inline void Position::set_angle(double value) {
  set_has_angle();
  angle_ = value;
}

// required double length = 2;
inline bool Position::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline double Position::length() const {
  return length_;
}
inline void Position::set_length(double value) {
  set_has_length();
  length_ = value;
}

// required double accuracy = 3;
inline bool Position::has_accuracy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_accuracy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_accuracy() {
  accuracy_ = 0;
  clear_has_accuracy();
}
inline double Position::accuracy() const {
  return accuracy_;
}
inline void Position::set_accuracy(double value) {
  set_has_accuracy();
  accuracy_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Position_2eproto__INCLUDED
