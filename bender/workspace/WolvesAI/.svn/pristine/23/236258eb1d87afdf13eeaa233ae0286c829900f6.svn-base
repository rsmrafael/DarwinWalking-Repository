/*
 * HeadMovement.h
 *
 *  Created on: 24.04.2014
 *      Author: Oliver Krebs
 */

#ifndef HEADMOVEMENT_H_
#define HEADMOVEMENT_H_

#include "../../ModuleManager/Module.h"
#include "../../Representations/Object.h"
#include "../../Representations/ObjectList.h"
#include "../../Representations/RobotConfiguration.h"
#include "../../Representations/YUVImage.h"
#include "../../Representations/HeadAction.h"
#include "../../Representations/VisionStatus.h"
#include "../../Representations/BehaviorStatus.h"

BEGIN_DECLARE_MODULE(HeadMovement)
	REQUIRE(Object,BallPredict)
	REQUIRE(ObjectList,GoalPoles)
	REQUIRE(RobotConfiguration,RobotConfiguration)
	REQUIRE(YUVImage, Image)
	REQUIRE(BehaviorStatus,BehaviorStatus)
	PROVIDE(HeadAction, HeadAction)
	PROVIDE(VisionStatus, BallStatus)
	PROVIDE(VisionStatus, GoalStatus)
END_DECLARE_MODULE(HeadMovement)

class HeadMovement : public HeadMovementBase {
public:
	HeadMovement();
	virtual ~HeadMovement();

	bool execute();

private:
	bool searchObject(bool topRowOnly);
	bool processTracker(const Object& object) const;
	void searchBall();
	void searchGoal();

	int mSearchObjectRow;
	int mSearchObjectPan;
	int mSearchObjectTilt;
	int mSearchObjectPanDir;
	int mSearchObjectTiltDir;
	int mSearchObjectLoopPoint;
	int mSearchObjectUpdateCnt;

	int mFoundCounter;
	int mNotFoundCounter;
	int mLostCounter;

	bool mIsBallSeenStable;

	Object::ObjectType mLastSearchObjectType;
};

#endif /* HEADMOVEMENT_H_ */
