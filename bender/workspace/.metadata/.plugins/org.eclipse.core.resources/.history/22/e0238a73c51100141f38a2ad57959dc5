/*
 * FieldRunner.cpp
 *
 *  Created on: 22.07.2014
 *      Author: da-v1n
 */

#include "FieldRunner.h"
#include "../../Config.h"

FieldRunner::FieldRunner(Game *game, MitecomCommunicator *communicator)
:	AbstractBehavior( game, communicator){

}

FieldRunner::~FieldRunner() {
	// TODO Auto-generated destructor stub
}
void FieldRunner::configChanged()
{

}
void FieldRunner::executeBehavior()
{
	switch(mCurrentState) {
	case SCANFIELD:
		mCurrentState = processSearchBall();
		break;
	case MOVE_TO_FIELDLINE:
		mCurrentState = processMoveToBall();
		break;
	case TURN_HALF:
		mCurrentState = processPositionNearBall();
		break;
	case DELAY_LOOP:
		mCurrentState = processDelayLoop();
		break;
	default:
		Debugger::INFO("Striker", "Unknown state, change to searchBall");
		mCurrentState = SCANFIELD;
		break;
	}
}

void FieldRunner::gameStateHasChanged(Game::GameState state)
{
	if( state == IGame::READY) {
		Debugger::INFO("FieldRunner", "GameState ready: Scan ");
		mCurrentState = SCANFIELD;
		updateState();
	} else if( state == IGame::SET
			|| state == IGame::PLAYING) {
		if( mCurrentState == SCANFIELD) {
			Debugger::INFO("FieldRunner", "GameState set/play: Search ball");
			mCurrentState = MOVE_TO_FIELDLINE;
			updateState();
		}
	}
	AbstractBehavior::gameStateHasChanged( state);
}
string FieldRunner::getStateName(int state){
	switch(state){
	case SCANFIELD: return "SCANFIELD";
	case MOVE_TO_FIELDLINE: return "MOVE_TO_FIELDLINE";
	case TURN_HALF: return "TURN_HALF";
	case DELAY_LOOP: return "DELAY_LOOP";
	default: return AbstractBehavior::getStateName(state);
	}
}
void FieldRunner::entryScanfield(){

}
int FieldRunner::processScanfield(){
	return 0;
}

void FieldRunner::entryMoveFieldline(){

}
int FieldRunner::processMoveFieldline(){
	return 0;
}

void FieldRunner::entryTurnHalf(){

}
int FieldRunner::processTurnHalf(){
	return 0;
}
